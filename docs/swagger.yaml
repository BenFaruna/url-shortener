basePath: /api/v1
definitions:
  api.Response:
    properties:
      message:
        type: string
      status_code:
        type: integer
    type: object
  model.StatusMessage:
    properties:
      data:
        type: string
      message:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a url shortener server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: URL Shortener API
  version: "1.0"
paths:
  /address/{url}:
    get:
      consumes:
      - application/json
      description: returns the full url of the short code
      parameters:
      - description: shortcode to url
        in: path
        name: url
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StatusMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.StatusMessage'
      summary: Full address of short code
      tags:
      - url
  /shorten:
    post:
      consumes:
      - application/json
      description: returns the short code of url shortened
      parameters:
      - description: url to shorten
        in: body
        name: url
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.StatusMessage'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/model.StatusMessage'
      summary: Shortens a url
      tags:
      - url
  /signin:
    post:
      consumes:
      - application/json
      description: login user and create user session
      parameters:
      - description: username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: signin user
      tags:
      - auth
  /signout:
    post:
      consumes:
      - application/json
      description: logout user and destroy user session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: signout user
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      description: register user details to database
      parameters:
      - description: username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Response'
      summary: signup user
      tags:
      - auth
swagger: "2.0"
